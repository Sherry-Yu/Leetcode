# Definition for singly-linked list.
#class ListNode(object):
#    def __init__(self, x):
#        self.val = x
#        self.next = None

class Solution(object):
    def mergeTwoLists(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        l3=ListNode(0)
        head=l3
        n=0
        
        while l1 and l2:       
            if l1.val<l2.val:
                l3.next=ListNode(l1.val)
                l1=l1.next
            else:           
                l3.next=ListNode(l2.val)
                l2=l2.next
                
            n=n+1  
            if n==1:
                head=l3.next     
            l3=l3.next
            
        while l1:
            l3.next=ListNode(l1.val)
            l1=l1.next
            
            n=n+1
            if n==1:
                head=l3.next
            l3=l3.next
            
        while l2:
            l3.next=ListNode(l2.val)
            l2=l2.next
            
            n=n+1
            if n==1:
                head=l3.next
            l3=l3.next
            
        if n==0:
            return None
        
        return head
            
                
            
            
            
            
        
